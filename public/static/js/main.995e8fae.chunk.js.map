{"version":3,"sources":["components/AddUser.js","components/AllPositions.js","components/AllUsers.js","components/FindUser.js","components/Home.js","components/App.js","index.js"],"names":["USERS","gql","ADD_USER","AddUser","initialUser","allowEdit","EMPTY_USER","name","userName","role","password","console","log","newUser","useState","user","setUser","readOnly","useMutation","update","cache","data","createUser","users","readQuery","query","push","writeQuery","handleChange","event","target","id","value","onSubmit","preventDefault","variables","input","type","onChange","hidden","uuidv4","require","GAMEAREA","All","useQuery","fetchPolicy","loading","error","networkStatus","JSON","stringify","gamearea","coordinates","map","e","key","DELETE_USER","pollInterval","refetch","deleteUser","style","textAlign","Table","striped","bordered","hover","f","uuid","fontSize","href","onClick","newUsers","filter","USER","FindUser","setUserName","useLazyQuery","Home","client","ApolloClient","uri","App","className","exact","activeClassName","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.995e8fae.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\n\nconst USERS = gql`\n\t{\n\t  users {\n\t\t\tname\n\t\t\tuserName\n\t\t\trole\n\t\t}\n\t}\n`;\nconst ADD_USER = gql`\n\tmutation createUser($input: UserInput!) {\n\t\tcreateUser(input: $input) \n\t}\n`;\n\nconst AddUser = ({ initialUser, allowEdit }) => {\n  const EMPTY_USER = { name: \"\", userName: \"\", role: \"user\", password: \"\" }\n  console.log(\"initialUser\", initialUser)\n  let newUser = initialUser ? initialUser : { ...EMPTY_USER }\n  console.log(\"newUser\", newUser)\n\n  const [user, setUser] = useState({ ...newUser })\n  const [readOnly, setReadOnly] = useState(!allowEdit)\n\n\tconst [ createUser, { data } ] = useMutation(ADD_USER, {\n\t\tupdate(cache, { data }) {\n\t\t\tconst newUser = data.createUser;\n\t\t\tconst p = cache.readQuery({ query: USERS });\n\t\t\tconst { users } = p;\n\t\t\tusers.push(newUser);\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: USERS,\n\t\t\t\tdata: { users: [ ...users ] }\n\t\t\t});\n\t\t}\n\t});\n\n  const handleChange = (event) => {\n    const userName = event.target.id;\n    console.log(\"userName: \", userName)\n    user[userName] = event.target.value;\n    console.log(\"user: \", { ...user })\n    setUser({ ...user })\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n\t\tcreateUser({\n\t\t\tvariables: {\n\t\t\t\tinput: {\n          name: user.name,\n          userName: user.userName,\n          password: user.password\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n    setUser({ ...EMPTY_USER })\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name<br/>\n        <input type=\"text\" readOnly={readOnly} id=\"name\" value={user.name} onChange={handleChange} />\n      </label>\n      <br />\n      <label>\n      UserName <br/>\n        <input readOnly={readOnly} type=\"text\" id=\"userName\" value={user.userName} onChange={handleChange} />\n      </label>\n      <br />\n      {readOnly && <p>Role: {user.role}</p>}\n      <label hidden={readOnly}>\n        Password <br/>\n          <input readOnly={readOnly}  type=\"password\" id=\"password\" value={user.password} onChange={handleChange} />\n      </label>\n      <br /><br/>\n      {!readOnly && <input type=\"submit\" value=\"Submit\" />}\n    </form>\n  );\n}\n\nexport default AddUser;","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nconst uuidv4 = require('uuid/v4');\n\nconst ALL_POSITIONS = gql`\n\t{\n\t\tusers {\n\t\t\tname\n\t\t\tuserName\n\t\t\trole\n\t\t}\n\t}\n`;\n\nconst GAMEAREA = gql`\n\t{\n\t\tgamearea {\n\t\t\tcoordinates\n\t\t}\n\t}\n`;\n\nexport default function All() {\n\t// const { loading, error, data, networkStatus } = useQuery(ALL_POSITIONS);\n\t// const { loading, error, data, networkStatus } = useQuery(ALL_POSITIONS, { fetchPolicy: 'no-cache' });\n\tconst { loading, error, data, networkStatus } = useQuery(GAMEAREA, { fetchPolicy: 'no-cache' });\n\t// const { loading, error, data, networkStatus } = useQuery(ALL_POSITIONS, { pollInterval: 15000 });\n\t// if (loading) return <h3>Loading...</h3>;\n\t// if (error) return <p> {JSON.stringify(error)}</p>;\n\t// if (!data) return <p>No Data</p>;\n\tif (loading) return <h3>Loading gamearea...</h3>;\n\tif (error) return <p> {JSON.stringify(error)}</p>;\n\tif (!data) return <p>No Data from gamearea</p>;\n\n\treturn (\n\t\t<div>\n\t\t\t{/* data.users.map((f) => ( const name = f.name ? `Name: ${f.name}` : null; return (\n\t\t\t<p key={f.userName}>\n\t\t\t\t{name}, Username: {f.userName}, Role: {f.role}\n\t\t\t</p>\n\t\t\t); \n\t\t\t))  */}\n\t\t\t{data.gamearea.coordinates[0].map((e) => (\n\t\t\t\t<div>\n\t\t\t\t<p key={uuidv4()}>\n\t\t\t\t\tLongitude: {e[0]}, Latitude: {e[1]}\n\t\t\t\t\t{/* Latitude:{} , Longitude: {f.role} */}\n\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport uuid from \"uuid/v1\";\nimport Table from 'react-bootstrap/Table';\n\nconst USERS = gql`\n\t{\n\t\tusers {\n\t\t\tname\n\t\t\tuserName\n\t\t\trole\n\t\t}\n\t}\n`;\nconst DELETE_USER = gql`\n\tmutation deleteUser($userName: String!) {\n\t\tdeleteUser(userName: $userName)\n\t}\n`;\n\nexport default function All() {\n\t// const { loading, error, data, networkStatus } = useQuery(USERS);\n\t// const { loading, error, data, networkStatus } = useQuery(USERS, { fetchPolicy: 'no-cache' });\n\tconst { loading, error, data, refetch } = useQuery(USERS, { pollInterval: 15000 });\n\n\tconst [ deleteUser ] = useMutation(DELETE_USER);\n\n\tconst onDeleteFullRefetch = (userName) => {\n\t\tdeleteUser({ variables: { userName } });\n\t\trefetch();\n\t};\n\n\tconst onDeleteUpdateCache = (userName) => {\n\t\tdeleteUser({\n\t\t\tvariables: { userName },\n\t\t\tupdate(cache) {\n\t\t\t\tconst { users } = cache.readQuery({ query: USERS });\n\t\t\t\tconst newUsers = users.filter((f) => f.userName !== userName);\n\t\t\t\tcache.writeQuery({\n\t\t\t\t\tquery: USERS,\n\t\t\t\t\tdata: { users: newUsers }\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tif (loading) return <h3>Loading...</h3>;\n\tif (error) return <p> {JSON.stringify(error)}</p>;\n\tif (!data) return <p>No Data</p>;\n\n\treturn (\n\t\t<div style={{ textAlign: \"center\" }}>\n\t\t  <Table striped bordered hover>\n\t\t\t<thead>\n\t\t\t  <tr>\n\t\t\t\t<th>Username</th>\n\t\t\t\t<th>Name</th>\n\t\t\t\t<th>Role</th>\n\t\t\t\t<th></th>\n\t\t\t  </tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t  {data.users.map((f) => (\n\t\t\t\t<tr key={uuid()} >\n\t\t\t\t  <td>{f.userName}</td>\n\t\t\t\t  <td>{f.name ? f.name : null}</td>\n\t\t\t\t  <td>{f.role}</td>\n\t\t\t\t  <td>\n\t\t\t\t  &nbsp;&nbsp;\n\t\t\t\t\t  <a style={{fontSize: 8}} href=\"#\" onClick={() => onDeleteFullRefetch(f.userName)}>\n\t\t\t\t\tDelete (Refetch All)\n\t\t\t\t</a>\n\t\t\t\t, &nbsp;\n\t\t\t\t<a style={{fontSize: 8}} href=\"#\" onClick={() => onDeleteUpdateCache(f.userName)}>\n\t\t\t\t\tDelete (Update Cache)\n\t\t\t\t</a>\n\t\t\t\t</td>\n\t\t\t\t</tr>\n\t\t\t  ))}\n\t\t\t</tbody>\n\t\t  </Table >\n\t\t</div >\n\t  );\n\n\n\t// return (\n\t// \tdata.users.map((f) => {\n\t// \t<table>\n\t// \t\t<thead>\n\t// \t\t\t<tr>\n\t// \t\t\t\t<th>Username</th>\n\t// \t\t\t\t<th>navn</th>\n\t// \t\t\t\t<th>Role</th>\n\t// \t\t\t</tr>\n\t// \t\t</thead>\n\t// \t</table>;\n\t// \tconst name = f.name ? `Name: ${f.name}` : null;\n\t// \treturn (\n\t// \t\t<p key={f.userName}>\n\t// \t\t\t{name}, Username: {f.userName}, Role: {f.role}\n\t// \t\t\t&nbsp;\n\t// \t\t\t<a href=\"#\" onClick={() => onDeleteFullRefetch(f.userName)}>\n\t// \t\t\t\tDelete (Refetch All)\n\t// \t\t\t</a>\n\t// \t\t\t, &nbsp;\n\t// \t\t\t<a href=\"#\" onClick={() => onDeleteUpdateCache(f.userName)}>\n\t// \t\t\t\tDelete (Update Cache)\n\t// \t\t\t</a>\n\t// \t\t</p>\n\t// \t);\n\t// })\n\t// );\n}\n","import React, { useState } from 'react';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport AddUser from './AddUser';\n\nconst USER = gql`\n\tquery user($userName: String!) {\n\t\tuser(userName: $userName) {\n\t\t\tname\n\t\t\tuserName\n\t\t\trole\n\t\t}\n\t}\n`;\n\nexport default function FindUser() {\n\tconst [ userName, setUserName ] = useState('');\n\tconst [ user, { loading, error, data } ] = useLazyQuery(USER);\n\n\tconst fetchUser = () => {\n\t\t// if (id === \"\" || id.length !== 24) {\n\t\t//   return;\n\t\t// }\n\t\tuser({ variables: {userName} });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\tUsername:<input\n\t\t\t\ttype=\"txt\"\n\t\t\t\tvalue={userName}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tsetUserName(e.target.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t&nbsp; <button onClick={fetchUser}>Find User</button>\n\t\t\t<br />\n\t\t\t<br />\n\t\t\t{loading && <h2>Loading...</h2>}\n\t\t\t{error && <h2>Could not find user...</h2>}\n\t\t\t{data && <AddUser initialUser={data.user} />}\n\t\t</div>\n\t);\n}\n","import React from \"react\"\n\nexport default function Home() {\n  return (\n    <div>\n      <h2>GraphQL/Apollo demo</h2>\n      <p>\n        This is meant as a simple client demo, using the GraphQL API provided by the Lynda Friends Video\n      </p>\n    </div>\n  );\n}","// npm install react-bootstrap bootstrap\n// npm install react-leaflet leaflet\n\nimport React from \"react\";\nimport \"../App.css\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nimport { ApolloProvider } from \"@apollo/react-hooks\"\nimport ApolloClient from \"apollo-boost\"\nimport AddUser from \"./AddUser\";\nimport AllPositions from \"./AllPositions\";\nimport AllUsers from \"./AllUsers\"\nimport FindUser from \"./FindUser\"\nimport Home from \"./Home\"\n\nconst client = new ApolloClient({\n  uri: 'https://localhost:5000/graphql',\n})\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <ul className=\"header\">\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/\">Home</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/allUsers\">All Users</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/allPositions\">All Positions</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/findUser\">Find User</NavLink>\n          </li>\n          <li>\n            <NavLink exact activeClassName=\"selected\" to=\"/addUser\">Add User</NavLink>\n          </li>\n        </ul>\n\n        <hr />\n        <ApolloProvider client={client}>\n          <div className=\"content\">\n            <Switch>\n\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/allUsers\">\n                <AllUsers />\n              </Route>\n              <Route path=\"/allPositions\">\n                <AllPositions />\n              </Route>\n              <Route path=\"/findUser\">\n                <FindUser />\n              </Route>\n              <Route path=\"/addUser\">\n                <AddUser allowEdit={true}/>\n              </Route>\n\n            </Switch>\n          </div>\n        </ApolloProvider>\n      </div>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}