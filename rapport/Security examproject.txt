Gruppe 5
Webtokens med begrænset levetid.
Hvordan kan man holde styr på udleverede tokens, så de kun kan bruges een gang og har en begrænset levetid.
Vi vil lave en "reset password" funktion på en login side, der giver brugeren mulighed for at lave et nyt kodeord. Til det skal bruges et token, der kun lever i en time og kun kan bruges een gang.

Berørte emner: Webtokens, prepared statements, sikring af mysql, sikkerheds headers, krypterede kodeord

Rapport emner:

webtokens med/uden udløb (med: tokens bliver registreret i DB / uden: tokens gemmes på klienten)
Ikke bruge færre en 8 tilfældige bytes til generering af token.
Forbedret sikkerhed med ORM (sequelize og prepared statements)
Sikring af mysql (krypteret forbindelse eller kun localhost)
Sikkerheds headere. Er der nogen der er relevante for os 
Mail (er mail programmet sikkert)
Vores sides "opførsel" mht til sikkerhed. Hvor mange oplysninger gives til brugeren. F.eks. ikke at fortælle at en email konto eksisterer.
Kryptering: Hashings salting. 
Logging
github automatiske dependency check: f.eks. acorn < 5.7.4 moderate severity

Kode todo:
Login
sanitering af brugerinput (kodeord)
sikring af exception ikke bliver vist på siden
sikret at alle hemmelige filer er i gitignore (.env og setup af DB)
evt. visning af database indhold på siden (så man kan se at tokens/kodeord skifter uden at gå ind i mysql workbench)
Logging

